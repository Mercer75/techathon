// Generated by Dagger (https://dagger.dev).
package com.example.passivedata;

import android.content.Context;
import androidx.work.WorkerParameters;
import dagger.internal.DaggerGenerated;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterForBackgroundDataWorker_Factory {
  private final Provider<HealthServicesManager> healthServicesManagerProvider;

  public RegisterForBackgroundDataWorker_Factory(
      Provider<HealthServicesManager> healthServicesManagerProvider) {
    this.healthServicesManagerProvider = healthServicesManagerProvider;
  }

  public RegisterForBackgroundDataWorker get(Context appContext, WorkerParameters workerParams) {
    return newInstance(appContext, workerParams, healthServicesManagerProvider.get());
  }

  public static RegisterForBackgroundDataWorker_Factory create(
      Provider<HealthServicesManager> healthServicesManagerProvider) {
    return new RegisterForBackgroundDataWorker_Factory(healthServicesManagerProvider);
  }

  public static RegisterForBackgroundDataWorker newInstance(Context appContext,
      WorkerParameters workerParams, HealthServicesManager healthServicesManager) {
    return new RegisterForBackgroundDataWorker(appContext, workerParams, healthServicesManager);
  }
}
